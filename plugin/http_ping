#!/bin/bash
################################
# Author: Rum Coke
# Data  : 2015/07/10
# Ver   : 0.9.1
################################
# Send to HttpPing to URLs.
function SendHttpPing()
{
	for (( Z = 0; Z < ${#URL[@]}; ++Z ))
	do
		# Execute Httping.
		ArrayResult[$Z]=`httping -c ${TRY} --timeout ${TIME_OUT} ${URL[$Z]} 2> /dev/null`
	done
}

# Check HttpPing Response.
function CheckHttpResponse()
{
	for (( Z = 0; Z < ${#URL[@]}; ++Z ))
	do
		# Error Check.
		echo ${ArrayResult[$Z]} | grep "${ERROR_CHECK_LABEL}" >/dev/null 2>&1 || ERROR_FLAG=true
		
		if [ ${ERROR_FLAG} == 'true' ]
		then
			# Error Found.
			ArrayAvg[$Z]=${TIME_OUT_VALUE}
		else
			# Error Not Found.
			WORK=`echo ${ArrayResult[$Z]} | sed -e 's/.*round-trip\ min\/avg\/max\ =\ //g' -e 's/\ ms$//g'`
			ArrayAvg[$Z]=`echo ${WORK} | awk -F\/ '{ print $2 }'`
		fi
		
		# Reflesh Flag.
		ERROR_FLAG=false
	done
}

################################
# Main Function
################################

# Locale Setting.
LANG=C

# Try Count.
TRY=3

# Time Out.
TIME_OUT=30s

# Time Out Value(ms).
TIME_OUT_VALUE=99999.0

# Warn and Critical.(ms)
WARN_RES='1000.0'
CRITICAL_RES='5000.0'

# URLs.
URL=( \
'http://www.google.com' \
'http://www.yahoo.co.jp' \
)

# Label for URLs.
URL_LABEL=( \
'Google' \
'Yahoo!' \
)

# Error Check Label.
ERROR_CHECK_LABEL='connected to'

# Error Flag.
ERROR_FLAG=false

# Exec httping.
SendHttpPing

# Response Check.
CheckHttpResponse

if [ "$1" = "autoconf" ]; then
	echo yes
       	exit 0
fi

if [ "$1" = "config" ]; then
	# Glaph Common
	echo 'graph_title Http Ping'
	echo 'graph_args --base 1000 -l 0'
	echo 'graph_vlabel response(ms)'
	echo 'graph_category network'
	echo 'graph_order response time'
	echo 'graph_scale yes'
	echo 'graph_printf %6.2lf'
	echo "graph_order ${URL_LABEL[0]} ${URL_LABEL[1]} ${URL_LABEL[2]}"

	# Set Info.
	for (( Z = 0; Z < ${#URL[@]}; ++Z ))
	do
		echo "${URL_LABEL[$Z]}.label ${URL_LABEL[$Z]}"
		echo "${URL_LABEL[$Z]}.draw LINE1"
		echo "${URL_LABEL[$Z]}.warning ${WARN_RES}"
		echo "${URL_LABEL[$Z]}.critical ${CRITICAL_RES}"
		echo "${URL_LABEL[$Z]}.info Http Response."
	done

	exit 0
fi

# Set Value.
for (( Z = 0; Z < ${#URL[@]}; ++Z ))
do
	echo "${URL_LABEL[$Z]}.value ${ArrayAvg[$Z]}"
done

